#!/bin/bash

# 3-Clause BSD License
#
# Copyright (c) 2008-2022, James Philip Rowell,
# Alpha Eleven Incorporated
# www.alpha-eleven.com
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#
#  3. Neither the name of the copyright holder, "Alpha Eleven, Inc.",
#     nor the names of its contributors may be used to endorse or
#     promote products derived from this software without specific prior
#     written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# test_lsseq - Run the lsseq regression tests.

usage_exit() {
    echo "Usage: ${0##*/} [-h | --help] [--testSystem-lsseq]"
    if [ "$1" = help ]; then
	cat - <<@eof

${0##*/} Run regression tests on lsseq. Must be run in the
<lsseq-repository>/tests directory.

Options:

 -h, --help         show this help and exit
 --testSystem-lsseq run the regression tests on the version of
                    lsseq installed on the system. Output test
                    results to appropriatly named file.

@eof
    fi
    exit 1
}

TEST_SYSTEM_LSSEQ=no

#
# Parse options.  Stop when you get to the file list.
#
shopt -s extglob
while :
do
    case "$1" in
        -h|--help) usage_exit help
        ;;

        --testSystem-lsseq) TEST_SYSTEM_LSSEQ=yes
             shift
        ;;

        --*|-*) usage_exit
        ;;

        *) break # We're done processing arguments, so let's get on with it. :-)
    esac
done

export LC_ALL=POSIX
unset OIC_IMAGE_EXTENSION
unset OIC_MOV_EXTENSION
unset OIC_CACHE_EXTENSION
unset LSSEQ_IMAGE_EXTENSION
unset LSSEQ_MOV_EXTENSION
unset LSSEQ_CACHE_EXTENSION

# !!! This script MUST be run from the 'tests'
# !!! directory in the lsseq git repo for this to work.
#
export TEST_DIR=`pwd`

if [[ `basename $TEST_DIR` != 'tests' ]]; then
    echo $0: error: not running from tests directory, aborted.
    exit 1
fi

cleanup() {
    /bin/rm $tmpArgs > /dev/null 2>&1
    /bin/rm $tmpfile > /dev/null 2>&1
    /bin/rm $TEST_DIR/testdir/jdir/j03/j04.005.jpg > /dev/null 2>&1
    /bin/rm $TEST_DIR/testdir/idir/v002/iii03.0005.jpg > /dev/null 2>&1
    exit 0
}

TEST_OUT_FILENAME=test_lsseq.out.`uname`.new

trap cleanup INT

if [ "$TEST_SYSTEM_LSSEQ" = no ]; then
    ln -sf ../lsseq/__main__.py  lsseq

    if [[ ! ":$PATH:" == *":$TEST_DIR:"* ]]; then
        export PATH="$TEST_DIR:$PATH"
    fi
else
    /bin/rm lsseq > /dev/null 2>&1 # Remove soft-linked lsseq if in this test dir
    TEST_OUT_FILENAME=test_lsseq.out.`uname`.installed.new
fi

echo "Test is using " `which lsseq`

# NOTE: To make sure the modification times of the testdir/cdir and ndir images are
# set properly for testing we need to force specific times on to the files
# as we can't rely on git to set these properly for us.
#
# How the timestamps were created: (for example)
# cd tests/testdir/cdir
# ls ccc*.*.* > list.images
# vi list.images - then ordered it to be ccc01* ccc03* and ccc02* in the correct frame order
# initial.image.mtimes < list.images > custom.touch.images
# vi custom.touch.images - edit the times to make for different "oldest" and "newest" vs "median".
# source custom.touch.images

unalias lsseq > /dev/null 2>&1

tmpArgs=/tmp/tmpARGS_LSSEQ$$
tmpfile=/tmp/tmpFILE_LSSEQ$$

cd $TEST_DIR/testdir/cdir
source custom.touch.images
cd $TEST_DIR/testdir/ndir
source custom.touch.images
cd $TEST_DIR/testdir/pdir
source custom.touch.images
cd $TEST_DIR/testdir/qdir
source custom.touch.images
cd $TEST_DIR

cd testdir/hdir
source touch.files
cd $TEST_DIR

cd testdir/jdir/j03
/bin/rm -f j04.005.jpg
ln -s missing.jpg j04.005.jpg
cd $TEST_DIR

cd testdir/idir/v002
/bin/rm -f iii03.0005.jpg
ln -s missing.jpg iii03.0005.jpg
cd $TEST_DIR

if [ `uname` = Darwin ]; then
    LS_FULL_TIME='-T'
else
    LS_FULL_TIME='--full-time'
fi

# Set as env-var for 'ls -C' and 'ls -x'.
# Also will be interpreted as width of tty
#
export COLUMNS=100

# The following are test arguments. One test per line.
# The first item on a line is the working directory for the test to place in.
# The rest are args to lsseq.
#
cat << EOF > $tmpArgs
. uname
. lsseq --version
. lsseq --help
. lsseq -lRFC --quiet testdir
. lsseq -lReC --silent testdir
. lsseq -lReoC --silent testdir
. lsseq -RePC --quiet testdir
. lsseq -lRFC testdir
. lsseq -lReC testdir
. lsseq -lReoC testdir
. lsseq -RePC testdir
testdir lsseq -p
testdir lsseq
testdir lsseq *
testdir lsseq -l *
testdir/cdir lsseq
testdir/cdir lsseq .
testdir/cdir lsseq *
testdir/cdir lsseq -d *
testdir/cdir lsseq -c
testdir/cdir lsseq -e -R
testdir/cdir lsseq -e -R -P
testdir/cdir lsseq -fnative
testdir/cdir lsseq -f nuke
testdir/cdir lsseq -fshake
testdir/cdir lsseq -f rv
testdir/cdir lsseq -fglob
testdir/cdir lsseq -i
testdir/cdir lsseq -M
testdir/cdir lsseq -o
testdir/cdir lsseq -p *
testdir/cdir lsseq -P *
testdir/cdir lsseq -r
testdir/cdir lsseq -t
testdir/cdir lsseq -t --time oldest
testdir/cdir lsseq -t --time median
testdir/cdir lsseq -Z
testdir/cdir lsseq -R $TEST_DIR/testdir/cdir/ $TEST_DIR/testdir/
testdir/cdir lsseq -R $TEST_DIR/testdir/cdir/
testdir/cdir lsseq -Ra
testdir/cdir lsseq -R -b --good-frame-min-size 1K
testdir/cdir lsseq -1Rb
testdir/cdir lsseq -1RbC
testdir/cdir lsseq -Rbx
testdir/cdir lsseq -1CRbx
testdir/cdir lsseq -R -P -p -P -f rv -f glob -f native -C -b
testdir/idir lsseq
testdir/idir lsseq -R
testdir/idir lsseq -P *
testdir/idir lsseq -p *
testdir/hdir lsseq -t -r -P foo/*/* v001/* v002/* v003/*
testdir/hdir lsseq --only-show before 20150701-1821 -t -r -P foo/*/* v001/* v002/* v003/*
testdir/hdir lsseq --only-show before   150701-1821 --time oldest -t -r -P foo/*/* v001/* v002/* v003/*
testdir/jdir lsseq --show-bad-padding --skip-missing --skip-zero --skip-bad-frames -R
testdir/jdir/beauty/v001 lsseq --show-bad-padding --skip-missing --skip-zero --skip-bad-frames -R
testdir/ndir ls $LS_FULL_TIME -o
testdir/ndir lsseq
testdir/ndir lsseq --only-show before 20100615-12 --time oldest
testdir/ndir lsseq --only-show before 20100615-12 --time median
testdir/ndir lsseq --only-show before 20100615-12 --time newest
testdir/ndir lsseq --only-show since    100615-12 --time oldest
testdir/ndir lsseq --only-show since    100615-12 --time median
testdir/ndir lsseq --only-show since    100615-12 --time newest
.            lsseq -i
testdir/gdir lsseq --only-images
testdir/gdir lsseq --only-movies
testdir/gdir lsseq --only-caches
testdir lsseq --no-error-lists --recursive --prepend-path-rel -t --time median cdir ndir
testdir lsseq --no-error-lists --recursive --prepend-path-rel -t --time oldest cdir ndir
testdir lsseq --no-error-lists --recursive --prepend-path-rel -t --time newest cdir ndir
testdir lsseq --global-sort-by-time --no-error-lists --recursive --prepend-path-rel -t --time median cdir ndir
testdir lsseq --global-sort-by-time --no-error-lists --recursive --prepend-path-rel -t --time oldest cdir ndir
testdir lsseq --global-sort-by-time --no-error-lists --recursive --prepend-path-rel -t --time newest cdir ndir
testdir lsseq --global-sort-by-time --no-error-lists --recursive --prepend-path-rel -t --time median pdir cdir ndir
testdir lsseq --global-sort-by-time --no-error-lists --recursive --prepend-path-rel -t --time oldest pdir cdir ndir
testdir lsseq --global-sort-by-time --no-error-lists --recursive --prepend-path-rel -t --time newest pdir cdir ndir
testdir/pdir ls -R $LS_FULL_TIME -o -t -r
testdir/pdir lsseq --no-error-lists --recursive -t -r --time median
testdir/pdir lsseq --global-sort-by-time --no-error-lists --recursive -t -r --time median
testdir lsseq --no-error-lists --recursive --prepend-path-rel -t -r --time median pdir
testdir lsseq --no-error-lists --recursive --prepend-path-rel -t -r --time oldest pdir
testdir lsseq --no-error-lists --recursive --prepend-path-rel -t -r --time newest pdir
testdir/pdir lsseq --global-sort-by-time --no-error-lists --recursive --prepend-path-rel -t -r --time median
testdir/pdir lsseq --global-sort-by-time --no-error-lists --recursive --prepend-path-rel -t -r --time oldest
testdir/pdir lsseq --global-sort-by-time --no-error-lists --recursive --prepend-path-rel -t -r --time newest
testdir/pdir ls -R $LS_FULL_TIME -t -o
testdir lsseq --global-sort-by-time --no-error-lists --recursive --prepend-path-rel -t --time median pdir
testdir lsseq --global-sort-by-time --no-error-lists --recursive --prepend-path-rel -t --time oldest pdir
testdir lsseq --global-sort-by-time --no-error-lists --recursive --prepend-path-rel -t --time newest pdir
testdir/qdir ls -R $LS_FULL_TIME -t -o
testdir lsseq --global-sort-by-time --no-error-lists --recursive --prepend-path-rel -t --time median qdir
testdir lsseq --global-sort-by-time --no-error-lists --recursive --prepend-path-rel -t --time oldest qdir
testdir lsseq --global-sort-by-time --no-error-lists --recursive --prepend-path-rel -t --time newest qdir
testdir/idir/v002 ls
testdir/idir/v002 ls foobar
testdir/idir/v002 lsseq
testdir/idir      lsseq v002
testdir           lsseq idir/v002
testdir/idir/v002 lsseq -p
testdir/idir/v002 lsseq -P
testdir/idir      lsseq -P v002
testdir           lsseq -P idir/v002
testdir/idir/v002 lsseq iii01.*
testdir/idir/v002 lsseq iii02.*
testdir/idir/v002 lsseq iii03.*
testdir/idir/v002 lsseq iii02.* foobar
testdir/idir/v002 lsseq iii03.* foobar
testdir/idir/v002 lsseq iii*.* foobar
.                 lsseq $TEST_DIR/testdir/idir/v002/iii02.*
testdir/idir/v002 lsseq --silent
testdir/idir      lsseq --silent v002
testdir           lsseq --silent idir/v002
testdir/idir/v002 lsseq --silent -p
testdir/idir/v002 lsseq --silent -P
testdir/idir      lsseq --silent -P v002
testdir           lsseq --silent -P idir/v002
testdir/idir/v002 lsseq --silent iii01.*
testdir/idir/v002 lsseq --silent iii02.*
testdir/idir/v002 lsseq --silent iii03.*
testdir/idir/v002 lsseq --silent iii02.* foobar
testdir/idir/v002 lsseq --silent iii03.* foobar
testdir/idir/v002 lsseq --silent iii*.* foobar
testdir/pdir lsseq --recursive --prepend-path-rel
testdir/pdir lsseq --recursive --prepend-path-rel *
testdir/rdir lsseq --prepend-path-rel --no-error-lists --recursive
testdir/rdir lsseq --prepend-path-rel --no-error-lists --recursive --only-images
testdir/rdir lsseq --prepend-path-rel --no-error-lists --recursive --only-movies
testdir/rdir lsseq --prepend-path-rel --no-error-lists --recursive --only-caches
testdir/rdir lsseq --prepend-path-rel --no-error-lists --recursive --format native
testdir/rdir lsseq --prepend-path-rel --no-error-lists --recursive --format nuke
testdir/rdir lsseq --prepend-path-rel --no-error-lists --recursive --format rv
testdir/rdir lsseq --prepend-path-rel --no-error-lists --recursive --format shake
testdir/rdir lsseq --prepend-path-rel --no-error-lists --recursive --format glob
testdir/rdir lsseq --prepend-path-rel --no-error-lists --recursive --format mplay
testdir/rdir lsseq --prepend-path-rel --no-error-lists --recursive --format houdini
testdir lsseq -R -P --only-movies
testdir lsseq -R -P --only-movies --global-sort-by-time
testdir lsseq -R -P --only-caches
testdir lsseq -R -P --only-caches --global-sort-by-time
testdir lsseq -R -P --only-sequences
testdir lsseq -R -P --only-sequences --global-sort-by-time
testdir lsseq -R -p --only-movies
testdir lsseq -R -p --only-movies --global-sort-by-time
testdir lsseq -R -p --only-caches
testdir lsseq -R -p --only-caches --global-sort-by-time
testdir lsseq -R -p --only-sequences
testdir lsseq -R -p --only-sequences --global-sort-by-time
EOF

echo ------ Begin Tests ------ > $TEST_DIR/$TEST_OUT_FILENAME

i=1
while true; do
    set -f # Turn off globbing
    declare -a args=(`sed -n -e "$i p" $tmpArgs | sed -e 's/#.*//' `)
    if [ ${#args[@]} -eq 0 ]; then
        break;
    fi
    workingDir=${args[0]}
    cmd=${args[1]}
    args=(${args[@]:2})
    echo "" >> $TEST_DIR/$TEST_OUT_FILENAME
    echo ------ Test $i ------
    echo ------ Test $i : $workingDir ------ $cmd ${args[@]} ------ >> $TEST_DIR/$TEST_OUT_FILENAME
    cd $TEST_DIR/$workingDir
    set +f # Turn globbing back on
    $cmd ${args[@]} >> $TEST_DIR/$TEST_OUT_FILENAME 2>&1
    retVal=$?
    if [ $retVal -ne 0 ]; then
        echo "-+- Test $i: $cmd returned non-zero error code: $retVal -+-" >> $TEST_DIR/$TEST_OUT_FILENAME 2>&1
    fi
    i=$(expr $i + 1)
done

export LSSEQ_IMAGE_EXTENSION=jpg:exr
export LSSEQ_MOV_EXTENSION=mov
export LSSEQ_CACHE_EXTENSION=ass:fur

cat << EOF2 > $tmpArgs
.            lsseq -i
testdir/gdir lsseq --only-images
testdir/gdir lsseq --only-movies
testdir/gdir lsseq --only-caches
. echo -e \nThere is no way to test lsseq output to stdio if isatty is \nTrue so PLEASE manually run lsseq -R once on testdir to check \nif column-output is correct for the /bin/ls output.
EOF2

j=1
while true; do
    set -f
    declare -a args=(`sed -n -e "$j p" $tmpArgs | sed -e 's/#.*//' `)
    if [ ${#args[@]} -eq 0 ]; then
        break;
    fi
    workingDir=${args[0]}
    cmd=${args[1]}
    args=(${args[@]:2})
    echo "" >> $TEST_DIR/$TEST_OUT_FILENAME
    echo ------ Test $i ------
    echo ------ Test $i : $workingDir ------ $cmd ${args[@]} ------ >> $TEST_DIR/$TEST_OUT_FILENAME
    cd $TEST_DIR/$workingDir
    set +f
    $cmd ${args[@]} >> $TEST_DIR/$TEST_OUT_FILENAME 2>&1
    retVal=$?
    if [ $retVal -ne 0 ]; then
        echo "-+- Test $i: $cmd returned non-zero error code: $retVal -+-" >> $TEST_DIR/$TEST_OUT_FILENAME 2>&1
    fi
    i=$(expr $i + 1)
    j=$(expr $j + 1)
done

sed -e "1,$ s-$TEST_DIR-/...absPathToRepo.../tests-g" < $TEST_DIR/$TEST_OUT_FILENAME | \
        sed -e "1,$ s/$USER/testUser/g" > $tmpfile
expand < $tmpfile | sed -e '1,$ s/ *$//' > $TEST_DIR/$TEST_OUT_FILENAME

cleanup

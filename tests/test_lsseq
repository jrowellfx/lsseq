#!/bin/bash

# 3-Clause BSD License
#
# Copyright (c) 2008-2022, James Philip Rowell,
# Alpha Eleven Incorporated
# www.alpha-eleven.com
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#
#  3. Neither the name of the copyright holder, "Alpha Eleven, Inc.",
#     nor the names of its contributors may be used to endorse or
#     promote products derived from this software without specific prior
#     written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# test_lsseq - Run the lsseq regression tests.

usage_exit() {
    echo "Usage: ${0##*/} [-h | --help] [--testSystem-lsseq]"
    if [ "$1" = help ]; then
	cat - <<@eof

${0##*/} Run regression tests on lsseq. Must be run in the
<lsseq-repository>/tests directory.

Options:

 -h, --help         show this help and exit
 --testSystem-lsseq run the regression tests on the version of
                    lsseq installed on the system. Output test
                    results to appropriatly named file.

@eof
    fi
    exit 1
}

TEST_SYSTEM_LSSEQ=no

#
# Parse options.  Stop when you get to the file list.
#
shopt -s extglob
while :
do
    case "$1" in
        -h|--help) usage_exit help
        ;;

        --testSystem-lsseq) TEST_SYSTEM_LSSEQ=yes
             shift
        ;;

        --*|-*) usage_exit
        ;;

        *) break # We're done processing arguments, so let's get on with it. :-)
    esac
done

export LC_ALL=POSIX
unset OIC_IMAGE_EXTENSION
unset OIC_MOV_EXTENSION
unset OIC_CACHE_EXTENSION
unset LSSEQ_IMAGE_EXTENSION
unset LSSEQ_MOV_EXTENSION
unset LSSEQ_CACHE_EXTENSION

# !!! This script MUST be run from the 'tests'
# !!! directory in the lsseq git repo for this to work.
#
export TEST_DIR=`pwd`

if [[ `basename $TEST_DIR` != 'tests' ]]; then
    echo $0: error: not running from tests directory, aborted.
    exit 1
fi

cleanup() {
    /bin/rm $tmpArgs > /dev/null 2>&1
    /bin/rm $tmpfile > /dev/null 2>&1
    /bin/rm $TEST_DIR/testdir/jdir/j03/j04.005.jpg > /dev/null 2>&1
    exit 0
}

TEST_OUT_FILENAME=test_lsseq.out.`uname`.new

trap cleanup INT

if [ "$TEST_SYSTEM_LSSEQ" = no ]; then
    ln -sf ../lsseq/__main__.py  lsseq

    if [[ ! ":$PATH:" == *":$TEST_DIR:"* ]]; then
        export PATH="$TEST_DIR:$PATH"
        echo \# Run the following command once to help live testing.
        echo export PATH=\"$TEST_DIR:\$PATH\"
    fi
else
    TEST_OUT_FILENAME=test_lsseq.out.`uname`.installed.new
fi

echo "Test is using " `which lsseq`

# NOTE: To make sure the modification times of the testdir/cdir and ndir images are
# set properly for testing we need to force specific times on to the files
# as we can't rely on git to set these properly for us.
#
# How the timestamps were created: (for example)
# cd tests/testdir/cdir
# ls ccc*.*.* > list.images
# vi list.images - then ordered it to be ccc01* ccc03* and ccc02* in the correct frame order
# initial.image.mtimes < list.images > custom.touch.images
# vi custom.touch.images - edit the times to make for different "oldest" and "newest" vs "median".
# source custom.touch.images

unalias lsseq > /dev/null 2>&1

tmpArgs=/tmp/tmpARGS_LSSEQ$$
tmpfile=/tmp/tmpFILE_LSSEQ$$

cd testdir/cdir
source custom.touch.images
cd $TEST_DIR/testdir/ndir
source custom.touch.images
cd $TEST_DIR

cd testdir/hdir
source touch.files
cd $TEST_DIR

cd testdir/jdir/j03
/bin/rm -f j04.005.jpg
ln -s missing.jpg j04.005.jpg
cd $TEST_DIR

export COLUMNS=100 # Bash env var.

# The following are test arguments. One test per line.
# The first item on a line is the working directory for the test to place in.
# The rest are args to lsseq.
#
cat << EOF > $tmpArgs
. uname
. lsseq --version
. lsseq --help
. lsseq -lRFC --quiet testdir
. lsseq -lReC --silent testdir
. lsseq -lReoC --silent testdir
. lsseq -RePC --quiet testdir
. lsseq -lRFC testdir
. lsseq -lReC testdir
. lsseq -lReoC testdir
. lsseq -RePC testdir
testdir lsseq -p
testdir lsseq
testdir lsseq *
testdir lsseq -l *
testdir/cdir lsseq
testdir/cdir lsseq .
testdir/cdir lsseq *
testdir/cdir lsseq -d *
testdir/cdir lsseq -c
testdir/cdir lsseq -e -R
testdir/cdir lsseq -e -R -P
testdir/cdir lsseq -fnative
testdir/cdir lsseq -fnuke
testdir/cdir lsseq -fshake
testdir/cdir lsseq -frv
testdir/cdir lsseq -fglob
testdir/cdir lsseq -i
testdir/cdir lsseq -M
testdir/cdir lsseq -o
testdir/cdir lsseq -p *
testdir/cdir lsseq -P *
testdir/cdir lsseq -r
testdir/cdir lsseq -t
testdir/cdir lsseq -t --time oldest
testdir/cdir lsseq -t --time median
testdir/cdir lsseq -Z
testdir/cdir lsseq -R $TEST_DIR/testdir/cdir/ $TEST_DIR/testdir/
testdir/cdir lsseq -R $TEST_DIR/testdir/cdir/
testdir/cdir lsseq -Ra
testdir/cdir lsseq -R -b --goodFrameMinSize 1K
testdir/cdir lsseq -1Rb
testdir/cdir lsseq -1RbC
testdir/cdir lsseq -Rbx
testdir/cdir lsseq -1CRbx
testdir/cdir lsseq -R -P -p -P -f rv -f glob -fnative -C -b
testdir/idir lsseq
testdir/idir lsseq -R
testdir/idir lsseq -P *
testdir/idir lsseq -p *
testdir/hdir lsseq -t -r -P foo/*/* v001/* v002/* v003/*
testdir/hdir lsseq --onlyShow before 201507011821 -t -r -P foo/*/* v001/* v002/* v003/*
testdir/hdir lsseq --onlyShow before 201507011821 --time oldest -t -r -P foo/*/* v001/* v002/* v003/*
testdir/jdir lsseq --showBadPadding --skipMissing --skipZero --skipBadFrames -R
testdir/jdir/beauty/v001 lsseq --showBadPadding --skipMissing --skipZero --skipBadFrames -R
testdir/ndir ls --full-time
testdir/ndir lsseq
testdir/ndir lsseq --onlyShow before 20100615-12 --time oldest
testdir/ndir lsseq --onlyShow before 20100615-12 --time median
testdir/ndir lsseq --onlyShow before 20100615-12 --time newest
testdir/ndir lsseq --onlyShow since  20100615-12 --time oldest
testdir/ndir lsseq --onlyShow since  20100615-12 --time median
testdir/ndir lsseq --onlyShow since  20100615-12 --time newest
.            lsseq -i
testdir/gdir lsseq --onlyImages
testdir/gdir lsseq --onlyMovies
testdir/gdir lsseq --onlyCaches
testdir lsseq --noErrorLists --recursive --prependPathRel -t --time newest cdir ndir
testdir lsseq --noErrorLists --recursive --prependPathRel -t --time oldest cdir ndir
testdir lsseq --noErrorLists --recursive --prependPathRel -t --time median cdir ndir
EOF

echo ------ Begin Tests ------ > $TEST_DIR/$TEST_OUT_FILENAME

i=1
while true; do
    set -f # Turn off globbing
    declare -a args=(`sed -n -e "$i p" $tmpArgs | sed -e 's/#.*//' `)
    if [ ${#args[@]} -eq 0 ]; then
        break;
    fi
    workingDir=${args[0]}
    cmd=${args[1]}
    args=(${args[@]:2})
    echo "" >> $TEST_DIR/$TEST_OUT_FILENAME
    echo ------ Test $i ------
    echo ------ Test $i ------ lsseq ${args[@]} ------ >> $TEST_DIR/$TEST_OUT_FILENAME
    cd $TEST_DIR/$workingDir
    set +f # Turn globbing back on
    $cmd ${args[@]} >> $TEST_DIR/$TEST_OUT_FILENAME 2>&1
    i=$(expr $i + 1)
done

export LSSEQ_IMAGE_EXTENSION=jpg:exr
export LSSEQ_MOV_EXTENSION=mov
export LSSEQ_CACHE_EXTENSION=ass:fur

cat << EOF2 > $tmpArgs
.            lsseq -i
testdir/gdir lsseq --onlyImages
testdir/gdir lsseq --onlyMovies
testdir/gdir lsseq --onlyCaches
EOF2

j=1
while true; do
    set -f
    declare -a args=(`sed -n -e "$j p" $tmpArgs | sed -e 's/#.*//' `)
    if [ ${#args[@]} -eq 0 ]; then
        break;
    fi
    workingDir=${args[0]}
    cmd=${args[1]}
    args=(${args[@]:2})
    echo "" >> $TEST_DIR/$TEST_OUT_FILENAME
    echo ------ Test $i ------
    echo ------ Test $i ------ lsseq ${args[@]} ------ >> $TEST_DIR/$TEST_OUT_FILENAME
    cd $TEST_DIR/$workingDir
    set +f
    $cmd ${args[@]} >> $TEST_DIR/$TEST_OUT_FILENAME 2>&1
    i=$(expr $i + 1)
    j=$(expr $j + 1)
done

sed -e "1,$ s-$TEST_DIR-/...absPathToRepo.../tests-g" < $TEST_DIR/$TEST_OUT_FILENAME > $tmpfile
expand < $tmpfile | sed -e '1,$ s/ *$//' > $TEST_DIR/$TEST_OUT_FILENAME

cleanup

